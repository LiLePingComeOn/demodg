<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.PlanMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.plan">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 08 19:58:11 CST 2018.
        -->
        <id column="id"  property="id" />
        <result column="value"  property="value" />
        <result column="testinterval"  property="testinterval" />
        <result column="testcount"  property="testcount" />
        <result column="cretime"  property="cretime" />
        <result column="point"  property="point" />
        <result column="flow"  property="flow" />
        <result column="differentValue"  property="differentValue" />
        <result column="arrangeValue"  property="arrangeValue" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 08 19:58:11 CST 2018.
        -->
        id, value, testinterval, testcount,cretime,flow,differentValue,arrangeValue
    </sql>
    <select id="selectByid" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 08 19:58:11 CST 2018.
        -->
        select
        <include refid="Base_Column_List" />
        from plan
        where id = #{id,jdbcType=VARCHAR}
    </select>



    <select id="selectAll"  resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 08 19:58:11 CST 2018.
        -->
        select
        <include refid="Base_Column_List" />
        from plan
    </select>
    <insert id="insertPlan" parameterType="com.example.demo.entity.plan">


        insert into plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null  and id != ''">id,</if>
            <if test="value != null  and value != ''">value,</if>
            <if test="testinterval != null ">testinterval,</if>
            <if test="testcount != null ">testcount,</if>
            <if test="cretime != null ">cretime,</if>
            <if test="point != null ">point,</if>
            <if test="flow != null ">flow,</if>
            <if test="differentValue != null ">differentValue,</if>
            <if test="arrangeValue != null ">arrangeValue,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null  and id != ''">#{id},</if>
            <if test="value != null  and value != ''">#{value},</if>
            <if test="testinterval != null ">#{testinterval},</if>
            <if test="testcount != null ">#{testcount},</if>
            <if test="cretime != null ">#{cretime},</if>
            <if test="point != null ">#{point},</if>
            <if test="flow != null ">#{flow},</if>
            <if test="differentValue != null ">#{differentValue},</if>
            <if test="arrangeValue != null ">#{arrangeValue},</if>
        </trim>
    </insert>

    <update id="updatePlan" parameterType="com.example.demo.entity.plan">
        update plan
        <trim prefix="SET" suffixOverrides=",">
            <if test="id != null  and id != ''">ID,</if>
            <if test="value != null  and value != ''">VALUE,</if>
            <if test="testinterval != null ">TESTINTERVAL,</if>
            <if test="testcount != null ">TESTCOUNT,</if>
            <if test="cretime != null ">CRETIME,</if>
            <if test="point != null ">POINT,</if>
            <if test="flow != null ">FLOW,</if>
            <if test="differentValue != null ">FLOW,</if>
            <if test="arrangeValue != null ">ARRANGEVALUE,</if>
        </trim>
        where ID = #{id}
    </update>

    <delete id="deletePlanById" parameterType="String">
        delete from plan where ID = #{id}
    </delete>

    <delete id="deletePlanByIds" parameterType="String">
        delete from plan where ID in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>